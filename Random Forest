from sklearn import datasets

iris = datasets.load_iris()

print(iris.target_names)
print(iris.feature_names)

import pandas as pd
data = pd.DataFrame({'longueur sepale':iris.data[:,0],
                    'largeur sepale':iris.data[:,1],
                    'longueur petale':iris.data[:,2],
                    'largeur petale':iris.data[:,3],
                    'fleur':iris.target})
print(data.sample(n = 20))
data.describe()

from sklearn.model_selection import train_test_split

X = data[['longueur sepale','largeur sepale','longueur petale']]
#X = data[['longueur sepale','largeur sepale','longueur petale','largeur petale']]

y = data['fleur']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)

from sklearn import preprocessing
scaler = preprocessing.Normalizer().fit(X_train)
X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)

from sklearn.ensemble import RandomForestClassifier

clf = RandomForestClassifier(bootstrap=True, n_estimators=1000, criterion="entropy")
clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)



from sklearn import metrics

print("Accuracy ",metrics.accuracy_score(y_test, y_pred))

print(clf.predict([[6,3,5],[5,3,5],[5,3.5,1.3],[6,4,6],[1,2,7]]))

print("0: setosa, 1: versicolor, 2: virginica")

feature_imp = pd.Series(clf.feature_importances_, index = ['longueur sepale','largeur sepale','longueur petale']).sort_values(ascending = False)
print(feature_imp)

import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
sns.barplot(x = feature_imp, y = feature_imp.index)

plt.xlabel('Score of features')
plt.ylabel('Features')
plt.title("What's important")

plt.show()
